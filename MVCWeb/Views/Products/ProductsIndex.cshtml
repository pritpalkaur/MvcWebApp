@model IEnumerable<ProductViewModel>

<div class="container mt-5">
    <h2 class="text-center">Product List</h2>

    <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createModal">Create New Product</button>

    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>

                <th scope="col">ProductId</th>
                <th scope="col">Product Name</th>
                <th scope="col">Description</th>
                <th scope="col">Created By</th>
                <th scope="col">Created At</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
                <tr>
                    <td>@product.ProductId</td>
                    <td>@product.ProductName</td>
                    <td>@product.ProductDescription</td>
                    <td>@product.CreatedBy</td>
                    <td>@product.CreatedAt.ToString("g")</td>
                    <td>
                        <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editModal" data-id="@product.ProductId" data-name="@product.ProductName" data-description="@product.ProductDescription" data-createdby="@product.CreatedBy">Edit</button>
                        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@product.ProductId" data-name="@product.ProductName">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Create Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createForm">
                    <div class="mb-3">
                        <label for="createProductName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="createProductName" required>
                    </div>
                    <div class="mb-3">
                        <label for="createProductDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="createProductDescription" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="createCreatedBy" class="form-label">Created By</label>
                        <input type="text" class="form-control" id="createCreatedBy" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Create</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" id="editId">
                    <div class="mb-3">
                        <label for="editProductName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="editProductName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editProductDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editProductDescription" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="editCreatedBy" class="form-label">Created By</label>
                        <input type="text" class="form-control" id="editCreatedBy" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this product?</p>
                <p id="deleteProductName"></p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post">
                    <input type="hidden" id="deleteId">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"></script>

    <script>
        // Edit button click handler
        document.addEventListener('DOMContentLoaded', function () {
            var editModal = document.getElementById('editModal');
            var deleteModal = document.getElementById('deleteModal');

            editModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var id = button.getAttribute('data-id');
                var name = button.getAttribute('data-name');
                var description = button.getAttribute('data-description');
                var createdBy = button.getAttribute('data-createdby');

                var modal = bootstrap.Modal.getInstance(editModal);
                modal.querySelector('#editId').value = id;
                modal.querySelector('#editProductName').value = name;
                modal.querySelector('#editProductDescription').value = description;
                modal.querySelector('#editCreatedBy').value = createdBy;
            });

            deleteModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var id = button.getAttribute('data-id');
                var name = button.getAttribute('data-name');

                var modal = bootstrap.Modal.getInstance(deleteModal);
                modal.querySelector('#deleteId').value = id;
                modal.querySelector('#deleteProductName').innerText = name;
                modal.querySelector('#deleteForm').action = '@Url.Action("Delete", "Products")/' + id;
            });
        });

        // Create form submission
        document.getElementById('createForm').addEventListener('submit', function (event) {
            event.preventDefault();
            var productName = document.getElementById('createProductName').value;
            var productDescription = document.getElementById('createProductDescription').value;
            var createdBy = document.getElementById('createCreatedBy').value;

            fetch('@Url.Action("Create", "Products")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    ProductName: productName,
                    ProductDescription: productDescription,
                    CreatedBy: createdBy
                })
            }).then(response => {
                if (response.ok) {
                    location.reload(); // Refresh the page to show the new product
                }
            });
        });

        // Edit form submission
        document.getElementById('editForm').addEventListener('submit', function (event) {
            event.preventDefault();
            var id = document.getElementById('editId').value;
            var productName = document.getElementById('editProductName').value;
            var productDescription = document.getElementById('editProductDescription').value;
            var createdBy = document.getElementById('editCreatedBy').value;

            fetch('@Url.Action("Edit", "Products")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Id: id,
                    ProductName: productName,
                    ProductDescription: productDescription,
                    CreatedBy: createdBy
                })
            }).then(response => {
                if (response.ok) {
                    location.reload(); // Refresh the page to show the updated product
                }
            });
        });

        // Delete form submission
        document.getElementById('deleteForm').addEventListener('submit', function (event) {
            event.preventDefault();
            var id = document.getElementById('deleteId').value;

            fetch('@Url.Action("Delete", "Products")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ Id: id })
            }).then(response => {
                if (response.ok) {
                    location.reload(); // Refresh the page to remove the deleted product
                }
            });
        });
    </script>
}
